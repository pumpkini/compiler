
//TODOS
variable_decl: "vd"
type: "ty"
formals: "fo"
INTCONSTANT: "int" 
DOUBLECONSTANT: "double"
BOOLCONSTANT: "bool"
STRINGCONSTANT: "string"
IDENT: "T_ID"

start: statement
    | interface_decl
    | prototype

interface_decl: INTERFACE IDENT "{" prototype* "}"

prototype: type IDENT "(" formals ")" ";"
    | VOID IDENT "(" formals ")" ";"

statement_block: "{" variable_decl* statement* "}"

statement: "<" expr ">" ";"
    | if_stmt
    | while_stmt
    | for_stmt
    | return_stmt
    | break_stmt
    | continue_stmt
    | print_stmt
    | statement_block

if_stmt: IF "(" expr ")" statement (ELSE statement)?

while_stmt: WHILE "(" expr ")" statement

for_stmt: FOR "(" expr? ";" expr ";" expr? ")" statement

return_stmt: RETURN expr ";"

break_stmt: BREAK ";"

continue_stmt: CONTINUE ";"

print_stmt: PRINT (actuals)";"

expr: l_value "=" expr
        | constant
        | l_value
        | THIS
        | call
        | "(" expr ")"
        | expr "+" expr
        | expr "-" expr
        | expr "*" expr
        | expr "/" expr
        | expr "%" expr
        | "-" expr
        | expr "<" expr
        | expr "<=" expr
        | expr ">" expr
        | expr ">=" expr
        | expr "==" expr
        | expr "!=" expr
        | expr "&&" expr
        | expr "||" expr
        | "!" expr
        | READINTEGER "(" ")"
        | READLINE "(" ")"
        | NEW IDENT
        | NEWARRAY "(" expr "," TYPE ")"
        | ITOD "(" expr ")"
        | DTOI "(" expr ")"
        | ITOB "(" expr ")"
        | BTOI "(" expr ")"

l_value: IDENT
        | expr "." IDENT
        | expr "[" expr "]"

call: IDENT "(" actuals ")"
        | expr "." IDENT "(" actuals ")"


actuals: expr+ ","
    | 

constant: INTCONSTANT
    | DOUBLECONSTANT
    | BOOLCONSTANT
    | STRINGCONSTANT
    | NULL


WHILE: "while"
IF: "if"
ELSE: "else"
FOR: "for"
VOID: "void"
RETURN: "return"
BREAK: "break"
CONTINUE: "continue"
INTERFACE: "interface"
PRINT: "print"
THIS: "this"
READINTEGER: "ReadInteger"
READLINE : "readLine"
NEWARRAY : "NewArray"
TYPE : "int" 
    | "double"
    | "string" 
    | "bool"
ITOD : "itod"
DTOI : "dtoi"
ITOB : "itob"
BTOI : "btoi"
NULL : "null"
NEW: "new"


%import common.WS

%ignore WS

%import common.WS

%ignore WS